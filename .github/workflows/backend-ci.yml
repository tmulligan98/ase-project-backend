# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    env:
      TOM_TOM_ACCESS_KEY: ${{secrets.TOM_TOM_ACCESS_KEY}}
      AUTH_SECRET_KEY: ${{secrets.AUTH_SECRET_KEY}}
      CRYPTO_ALGORITHM: ${{secrets.CRYPTO_ALGORITHM}}
      DB_USER: "postgres"
      DB_PASSWORD: "password"
      DB_NAME: "postgres_db"
      PGADMIN_EMAIL: ""
      PGADMIN_PASSWORD: ""
      DATABASE_URL: ${{secrets.DATABASE_URL}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      # - name: Create env
      #   run: |
      #     touch .env
      #     echo TOM_TOM_ACCESS_KEY:""
      #     echo DATABASE_URL: "postgresql+psycopg2://postgres:password@localhost:5432/postgres_db"
      #     echo DB_USER: ""
      #     echo DB_PASSWORD: ""
      #     echo DB_NAME: ""
      #     echo PGADMIN_EMAIL: ""
      #     echo PGADMIN_PASSWORD: ""
      #     cat .env

      # - uses: actions/checkout@v1
      # - name: Build the docker-compose stack
      #   run:

      - uses: actions/checkout@v2
      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}

      - name: Install dependencies
        run: python -m pip install --upgrade pip
          pip install -r requirements.dev.txt

      - name: Linting
        uses: wearerequired/lint-action@v1
        with:
          black: true
          flake8: true
          mypy: true

      - name: Unit Testing
        run: |
          touch .env
          echo DATABASE_URL: "postgresql+psycopg2://postgres:password@localhost:5432/postgres_db"
          echo DB_USER: "user"
          echo DB_PASSWORD: "password"
          echo DB_NAME: "postgres_db"
          cat .env
          docker-compose up db &
          sleep 30s
          pytest
          docker-compose down db
